(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18282,        469]
NotebookOptionsPosition[     17083,        420]
NotebookOutlinePosition[     17441,        436]
CellTagsIndexPosition[     17398,        433]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Perceptron Building in Mathematica 11.0", "Section",
 CellChangeTimes->{{3.687948981070259*^9, 3.6879490153330517`*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Subsection",
 CellChangeTimes->{{3.68794919770118*^9, 3.68794919989186*^9}}],

Cell["\<\
Here is a design of the Simple Perceptron using the new functions in \
Mathematica 11.0 to creating a TensorFlow.
\
\>", "Text",
 CellChangeTimes->{{3.687949215811906*^9, 3.687949276274054*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Design the Perceptron ", "Subsection",
 CellChangeTimes->{{3.687949039188222*^9, 3.687949043658465*^9}}],

Cell["\<\
We just need a Dot Plus layer to calculate w.x+b, and a Softmax Layer to get \
the output value.  The output can have 2 possible values -1, or 1\
\>", "Text",
 CellChangeTimes->{{3.687949069058796*^9, 3.6879491121675386`*^9}, {
  3.687949144830317*^9, 3.68794917761303*^9}}],

Cell[CellGroupData[{

Cell["Build the Network", "Subsubsection",
 CellChangeTimes->{{3.68794931894418*^9, 3.6879493289984827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DotPlusLayer", "[", "2", "]"}], ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "2"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", " ", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.687945768591457*^9, 3.687945773195941*^9}, {
  3.687948190633019*^9, 3.6879482697163477`*^9}, {3.6879483283156*^9, 
  3.687948332072687*^9}, {3.687948397911281*^9, 3.687948406334097*^9}, {
  3.687948502482601*^9, 3.687948540008175*^9}, {3.687948617126576*^9, 
  3.687948627037833*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Inputs", "Input"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {2, 2}], "Biases" -> 
               NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[1, {2}]]], "Parameters" -> 
             Association["Size" -> 2, "$InputSize" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "2" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "2", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {1, -1}, "Dimensions" -> 2], "Input" -> 
               NeuralNetworks`TensorT[1, {2}]]], 
             NeuralNetworks`TensorT[1, {2}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{201., {25.9169921875, 31.0830078125}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.687945811390048*^9, {3.6879482061626387`*^9, 3.687948271201064*^9}, 
   3.687948332811284*^9, {3.687948399680522*^9, 3.687948407155596*^9}, {
   3.6879485185099773`*^9, 3.6879485403738403`*^9}, 3.687948627990189*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialize the Network", "Subsubsection",
 CellChangeTimes->{{3.687949296009264*^9, 3.687949334116804*^9}}],

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "[", "net", "]"}]}]], "Input",
 CellChangeTimes->{
  3.6879459762881308`*^9, {3.68794606047278*^9, 3.687946078183672*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train the Network", "Subsubsection",
 CellChangeTimes->{{3.687949357846162*^9, 3.6879493624289923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", " ", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", " ", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", " ", 
       RowBox[{"-", "1"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6879461491418953`*^9, 3.687946209625231*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Inputs", "Input"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "1"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "2"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {2, 2}], "Biases" -> 
               NeuralNetworks`TensorT[1, {2}]], "Parameters" -> 
             Association["Size" -> 2, "$InputSize" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "2" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "2", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`TensorT[1, {2}]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {1, -1}, "Dimensions" -> 2], "Input" -> 
               NeuralNetworks`TensorT[1, {2}]]], 
             NeuralNetworks`TensorT[1, {2}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
        NeuralNetworks`NetChain`PackagePrivate`part$$ = {"Outputs", "Output"},
         NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{201., {25.9169921875, 31.0830078125}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.687948751526903*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test the Accuracy of the Network", "Subsubsection",
 CellChangeTimes->{{3.687949376246298*^9, 3.687949382612463*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cm", "=", 
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"trained", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", " ", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", " ", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", " ", 
        RowBox[{"-", "1"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.687948767599518*^9, 3.687948782623122*^9}, {
  3.687948892325918*^9, 3.687948913616557*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.68794877677386*^9, 3.687948914269019*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 707},
WindowMargins->{{28, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 126, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[731, 27, 98, 1, 44, "Subsection"],
Cell[832, 30, 204, 5, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073, 40, 110, 1, 44, "Subsection"],
Cell[1186, 43, 284, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1495, 52, 109, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1629, 57, 867, 20, 54, "Input"],
Cell[2499, 79, 6162, 127, 93, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8710, 212, 113, 1, 35, "Subsubsection"],
Cell[8826, 215, 185, 4, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9048, 224, 110, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[9183, 229, 719, 21, 32, "Input"],
Cell[9905, 252, 5951, 123, 93, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15905, 381, 123, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[16053, 386, 882, 25, 75, "Input"],
Cell[16938, 413, 93, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

